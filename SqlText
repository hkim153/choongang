sql문 각자 기입해주시길바랍니다.

<-- LJW SQl Query-->
create table member(user_num number(38) constraint pk_member primary key,
id varchar2(100),
password varchar2(100),
name varchar2(100),
email varchar2(100),
address varchar2(100),
tel varchar2(100),
admin_c varchar2(20),
alive_c varchar2(20),
reg_date date);

create sequence usernum1 increment by 1 start with 1;

create sequence ranknum increment by 1 start with 1; // 승주야 쓰고나서 지워라

insert into member values('admin1', 'admin1', '이재원숭이1', 'fkenl123@gmail.com', '경기도 광주시 쌍령동 푸르지오', '010-2441-0856', 'A', 'A', sysdate, usernum1.nextval);

insert into member values('Lee123', '1234', 'Lee123', 'lee123@gmail.com', '경기도 광주시 쌍령동 푸르지오', '010-2441-0856', 'N', 'A', sysdate, usernum1.nextval);

<-- 재원이꺼 -->



<-- DH_인원모집 -->
-------------------- 인원모집 리스트 테이블 START -----------------------
CREATE TABLE RECRUIT
	(	RECRUIT_NUM NUMBER (3, 0),
		ID VARCHAR2 (20 BYTE),
		RECRUIT_TITLE VARCHAR2 (100 BYTE),
		RECRUIT_PASSWD VARCHAR2(20 BYTE),
		RECRUIT_TIMESET VARCHAR2(20 BYTE),
		RECRUIT_GOAL VARCHAR2(30 BYTE),
		RECRUIT_SPECIES VARCHAR2(20 BYTE),
		RECRUIT_EVENT DATE,
		RECRUIT_MEMBER NUMBER(3,0),
		REG_DATE DATE,
		RECRUIT_STATE NUMBER,
		E_ID NUMBER(5,0)
	);
-------------------- 인원모집 리스트 테이블 END -----------------------


------------------ 채팅방 테이블 START ----------------------------
CREATE TABLE RECRUIT_CHATROOM
	(	RECRUIT_NUM NUMBER primary key
		CHATID NUMBER
		ROOM_MANAGER VARCHAR2(20 BYTE)
		FROMID VARCHAR2(20 BYTE)
		CHATCONTENT VARCHAR2(500 BYTE)
		CHATTIME DATE
	);

CREATE SEQUENCE CHATID 
START WITH 1
MAXVALUE 10000
MINVALUE 1
INCREMENT BY 1
CYCLE
NOCACHE;
------------------ 채팅방 테이블 END ----------------------------


----------------------- 채팅방 참여자 테이블 START -------------------------
CREATE TABLE CHAT_PARTICIPANT
	(	RECRUIT_NUM NUMBER
		PARTICIPANT VARCHAR2(20 BYTE)
	);
----------------------- 채팅방 참여자 테이블 END -------------------------
<-- DH_인원모집 종료 -->



<-- 낚시터 게시판 및 추천 시작 BY HYUNSOO   -->
----1. 시퀀스 생성----
create sequence SEQ_FISH_CODE
	MINVALUE 1000
	MAXVALUE 10000
	INCREMENT BY 1
	START WITH 1000
	ORDER CYCLE;
 CREATE SEQUENCE SEQ_FISHINGSITE_CODE 
 	MINVALUE 1000
	MAXVALUE 10000
	INCREMENT BY 1
	START WITH 1000
	ORDER  CYCLE ;


----2. TABLE 생성(FISH, FISHINGSITE, FISHMAPPING)----

CREATE TABLE FISH 
(
	F_CODE NUMBER(*,0) PRIMARY KEY,
	F_NAME VARCHAR2(20 BYTE) NOT NULL ENABLE
);
	
CREATE TABLE FISHINGSITE
(	
	FS_CODE NUMBER(*,0) PRIMARY KEY, 
	FS_NAME VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	FS_ADDR VARCHAR2(1000 BYTE) NOT NULL ENABLE, 
	FS_CONTENT VARCHAR2(4000 BYTE), 
	FS_REG VARCHAR2(50 BYTE) NOT NULL ENABLE, 
	READCOUNT NUMBER(6,0), 
	REG_DATE DATE NOT NULL ENABLE, 
	ID VARCHAR2(12 BYTE) NOT NULL ENABLE, 
	FS_NUM NUMBER, 
	IMG_FOLDER VARCHAR2(200 BYTE), 
	REAL_NAME VARCHAR2(200 BYTE), 
	SAVED_NAME VARCHAR2(200 BYTE), 
	FS_PHONE VARCHAR2(40 BYTE)
);
CREATE TABLE FISHMAPPING 
(	
  	FS_CODE NUMBER(*,0), 
	F_CODE NUMBER(*,0), 
	FOREIGN KEY (FS_CODE) REFERENCES FISHINGSITE(FS_CODE) ENABLE, 
	FOREIGN KEY (F_CODE)REFERENCES FISH(F_CODE) ENABLE
);

----3. INSERT 데이터(FISH, FISHINGSITE, FISHMAPPING)----
INSERT INTO FISH VALUES(SEQ_FISH_CODE.NEXTVAL, '광어');
INSERT INTO FISH VALUES(SEQ_FISH_CODE.NEXTVAL, '연어');
INSERT INTO FISH VALUES(SEQ_FISH_CODE.NEXTVAL, '문어');
INSERT INTO FISH VALUES(SEQ_FISH_CODE.NEXTVAL, '숭어');
INSERT INTO FISH VALUES(SEQ_FISH_CODE.NEXTVAL, '송어');
INSERT INTO FISH VALUES(SEQ_FISH_CODE.NEXTVAL, '이면수');
INSERT INTO FISH VALUES(SEQ_FISH_CODE.NEXTVAL, '산천어');
INSERT INTO FISH VALUES(SEQ_FISH_CODE.NEXTVAL, '갈치');
INSERT INTO FISH VALUES(SEQ_FISH_CODE.NEXTVAL, '명태');
INSERT INTO FISH VALUES(SEQ_FISH_CODE.NEXTVAL, '은어');
INSERT INTO FISH VALUES(SEQ_FISH_CODE.NEXTVAL, '붕어');
INSERT INTO FISH VALUES(SEQ_FISH_CODE.NEXTVAL, '잉어');



<-- 낚시터 게시판 및 추천 종료 -->


<-- 랭크 -->

  CREATE TABLE RANKING  
  NUM NUMBER(38,0) NOT NULL ENABLE, 
  ID VARCHAR2(100 BYTE), 
  GET_FISH VARCHAR2(100 BYTE) NOT NULL ENABLE, 
  LENGTH NUMBER(38,0) NOT NULL ENABLE, 
  CONTENT VARCHAR2(100 BYTE) NOT NULL ENABLE, 
  REG_DATE DATE, 
  IMG_FOLDER VARCHAR2(100 BYTE), 
  FILE_NAME VARCHAR2(100 BYTE), 
  REAL_NAME VARCHAR2(100 BYTE)

<-- 랭크 종료 -->

<-- 게시판 -->
create table board(

b_num number(30) primary key,
b_title varchar2(100),
b_content varchar2(2000),
b_id varchar2(50),
b_readcount number,
b_date date,
b_filename varchar2(300),
b_notice number,
b_head number
);

<-- 게시판 댓글 -->
create table b_comment(
c_num number primary key,
c_bnum number not null, -- 외래키
c_id varchar2(50) not null,
c_date date not null,
c_content varchar2(500) not null
);


create sequence  comment_seq;
 <--여기까지 상훈-->
